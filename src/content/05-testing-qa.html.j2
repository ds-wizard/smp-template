<h2>5. Testing and Quality Assurance</h2>

<p>This section provides an overview of the testing and quality assurance practices that have been implemented for the software project. It outlines the automated testing, manual testing, static analysis, dynamic analysis, security testing, vulnerability testing, code review, and sample data that have been used to ensure the software's reliability, security, and performance. Understanding these practices is essential for maintaining the software's quality and integrity over time.</p>

<h3>5.1. Automated Testing</h3>

{%- if data.smp.testingQa.automated.uses == True -%}
    <p>The software project uses automated testing to verify its functionality and performance.
    {% if data.smp.testingQa.automated.types -%}
    The following types of automated testing are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.automated.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}

    {%- if data.smp.testingQa.automated.ci == True -%}
        <p>
        Continuous integration (CI) is used to automate the testing process and ensure that changes are tested and integrated into the codebase in a timely manner.
        {%- if data.smp.testingQa.automated.passBeforeMerge == True %}
        Automated tests must pass before code changes are merged into the main branch to maintain code quality and prevent regressions.
        {%- elif data.smp.testingQa.automated.passBeforeMerge == False %}
        Automated tests are not required to pass before code changes are merged into the main branch.
        {%- endif -%}
        </p>
    {%- endif -%}
{%- elif data.smp.testingQa.automated.uses == False -%}
    <p>
    The software project does not use automated testing to verify its functionality and performance.
    {%- if data.smp.testingQa.automated.reason %}
    There is a specific reason for not using automated testing: {{ data.smp.testingQa.automated.reason }}.
    </p>
    {%- endif %}
{%- else -%}
    <p>Automated testing has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

<h3>5.2. Manual Testing</h3>

{%- if data.smp.testingQa.manual.uses == True -%}
    <p>The software project uses manual testing to verify its functionality and performance.
    {% if data.smp.testingQa.manual.types -%}
    The following types of manual testing are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.manual.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}

    {%- if data.smp.testingQa.manual.docs == True -%}
        <p>
        Manual testing is documented to ensure that test cases are repeatable and consistent across different testing environments.
        </p>
    {%- endif -%}
{%- elif data.smp.testingQa.manual.uses == False -%}
    <p>
    The software project does not use manual testing to verify its functionality and performance.
    </p>
{%- else -%}
    <p>Manual testing has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

<h3>5.3. Static and Dynamic Analysis</h3>

{%- if data.smp.testingQa.staticAnalysis.uses == True -%}
    <p>The software project uses static analysis to identify potential issues in the codebase.
    {% if data.smp.testingQa.staticAnalysis.types -%}
    The following types of static analysis are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.staticAnalysis.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}

    {%- if data.smp.testingQa.staticAnalysis.ci == True -%}
        <p>
        Continuous integration (CI) is used to automate the static analysis process and ensure that code quality is maintained throughout the development lifecycle.

        {%- if data.smp.testingQa.staticAnalysis.passBeforeMerge == True %}
        Static analysis must pass before code changes are merged into the main branch to maintain code quality and prevent regressions.
        {%- elif data.smp.testingQa.staticAnalysis.passBeforeMerge == False %}
        Static analysis is not required to pass before code changes are merged into the main branch.
        {%- endif -%}
        </p>
    {%- elif data.smp.testingQa.staticAnalysis.ci == False -%}
        <p>
        Static analysis is not integrated with continuous integration (CI) to automate the testing process.
        </p>
    {%- endif -%}
{%- elif data.smp.testingQa.staticAnalysis.uses == False -%}
    <p>
    The software project does not use static analysis to identify potential issues in the codebase.
    
    {%- if data.smp.testingQa.staticAnalysis.reason %}
    There is a specific reason for not using static analysis: {{ data.smp.testingQa.staticAnalysis.reason|dot }}
    {%- endif -%}
    </p>
{%- else -%}
    <p>Static analysis has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

{%- if data.smp.testingQa.dynamicAnalysis.uses == True -%}
    <p>The software project uses dynamic analysis to identify potential issues in the codebase. 
    {%- if data.smp.testingQa.dynamicAnalysis.description %}
        {{ data.smp.testingQa.dynamicAnalysis.description|dot }}
    {%- endif -%}
    {%- if data.smp.testingQa.dynamicAnalysis.types %}
    The following types of dynamic analysis are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.dynamicAnalysis.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}
{%- elif data.smp.testingQa.dynamicAnalysis.uses == False -%}
    <p>
    The software project does not use dynamic analysis to identify potential issues in the codebase.

    {% if data.smp.testingQa.dynamicAnalysis.reason %}
    There is a specific reason for not using dynamic analysis: {{ data.smp.testingQa.dynamicAnalysis.reason|dot }}
    {% endif -%}
    </p>
{%- else -%}
    <p>Dynamic analysis has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

<h3>5.4. Security and Vulnerability Testing</h3>

{%- if data.smp.testingQa.security.uses == True -%}
    <p>The software project uses security testing to identify potential vulnerabilities and security issues. 
    {% if data.smp.testingQa.security.description %}
    {{ data.smp.testingQa.security.description }}
    {% endif %}
    {% if data.smp.testingQa.security.types %}
    The following types of security testing are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.security.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% endif %}
{%- elif data.smp.testingQa.security.uses == False -%}
    <p>
    The software project does not use security testing to identify potential vulnerabilities and security issues.

    {%- if data.smp.testingQa.security.reason %}
    There is a specific reason for not using security testing: {{ data.smp.testingQa.security.reason }}.
    {%- endif -%}
    </p>
{%- else -%}
    <p>Security testing has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

{%- if data.smp.testingQa.vulnerability.uses == True -%}
    <p>The software project uses vulnerability testing to identify potential vulnerabilities and security issues.
    {% if data.smp.testingQa.vulnerability.types -%}
    The following types of vulnerability testing are employed:</p>
    <ul>
        {% for type in data.smp.testingQa.vulnerability.types -%}
        <li>{{ type }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}

    {%- if data.smp.testingQa.vulnerability.description %}
    <p>{{ data.smp.testingQa.vulnerability.description }}</p>
    {%- endif -%}
{%- elif data.smp.testingQa.vulnerability.uses == False -%}
    <p>
    The software project does not use vulnerability testing to identify potential vulnerabilities and security issues.

    {%- if data.smp.testingQa.vulnerability.reason %}
    There is a specific reason for not using vulnerability testing: {{ data.smp.testingQa.vulnerability.reason }}.
    {%- endif -%}
    </p>
{%- else -%}
    <p>Vulnerability testing has not yet been considered for this software project. However this may changed as the project progresses.</p>
{%- endif -%}

<h3>5.5. Code Review</h3>

{%- if data.smp.testingQa.codeReview.uses == True -%}
    <p>The software project uses code review to ensure code quality and maintainability.
    {% if data.smp.testingQa.codeReview.aspects -%}
    The following aspects of code review are employed:</p>
    <ul>
        {% for aspect in data.smp.testingQa.codeReview.aspects -%}
        <li>{{ aspect }}</li>
        {% endfor -%}
    </ul>
    {% else -%}
    </p>
    {% endif -%}

    {%- if data.smp.testingQa.codeReview.mandatory == True -%}
    <p>Code review is mandatory for all code changes to ensure that code quality and maintainability are maintained throughout the development lifecycle.</p>
    {%- elif data.smp.testingQa.codeReview.mandatory == False -%}
    <p>Code review is not mandatory for all code changes, but is encouraged to ensure that code quality and maintainability are maintained throughout the development lifecycle.</p>
    {%- endif -%}

    {%- if data.smp.testingQa.codeReview.hasChecklist == True -%}
    <p>A code review checklist is used to ensure that all aspects of code quality and maintainability are considered during the review process.</p>
    {%- elif data.smp.testingQa.codeReview.hasChecklist == False -%}
    <p>A code review checklist is not used to ensure that all aspects of code quality and maintainability are considered during the review process.</p>
    {%- endif -%}

    {%- if data.smp.testingQa.codeReview.hasAutomation == True -%}
    <p>Automation is used to assist with the code review process and ensure that code quality and maintainability are maintained throughout the development lifecycle.</p>
    {%- elif data.smp.testingQa.codeReview.hasAutomation == False -%}
    <p>Automation is not used to assist with the code review process, but is encouraged to ensure that code quality and maintainability are maintained throughout the development lifecycle.</p>
    {%- endif -%}

    {%- if data.smp.testingQa.codeReview.howConstructive %}
    <p>Code review feedback is provided in a constructive manner to ensure that code quality and maintainability are maintained throughout the development lifecycle.</p>
    {%- endif -%}

    {%- if data.smp.testingQa.codeReview.reason %}
    <p>There is a specific reason for not using code review: {{ data.smp.testingQa.codeReview.reason }}.</p>
    {%- endif -%}
{%- elif data.smp.testingQa.codeReview.uses == False -%}
    <p>
    The software project does not use code review to ensure code quality and maintainability.
    </p>
{%- else -%}
    <p>Code review has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}

<h3>5.6. Sample Data</h3>

{%- if data.smp.testingQa.sampleData.hasSampleData == True -%}
    <p>
    The software project includes sample data to assist with testing and development.
    {% if data.smp.testingQa.sampleData.description %}
    The following description of sample data is provided: {{ data.smp.testingQa.sampleData.description }}
    {% endif %}
    </p>
{%- elif data.smp.testingQa.sampleData.hasSampleData == False -%}
    <p>
    The software project does not include sample data to assist with testing and development.
    </p>
{%- else -%}
    <p>Sample data has not yet been considered for this software project. However, this may changed as the project progresses.</p>
{%- endif -%}
